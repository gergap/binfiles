#!/usr/bin/perl
# (C) 2020 Gerhard Gappmeier
# This script is based on an example from Damian Conway
use 5.010;
use warnings;
use File::Basename;

my $MODULE_TEMPLATE_FILE = "$ENV{HOME}/.module-starter/PBP/Module.pm";

my %INFO = (
    FILENAME      => $ARGV[0] || "NAME",
    'MODULE NAME' => $ARGV[0] || "MODULE::NAME",
    'RT NAME'     => $ARGV[0] || "MODULE-NAME",
    'PROJECT'     => $ENV{PROJECT} || "one line to give the program's name and an idea of what it does.",
    INCLUDEGUARD  => "__FILE_H__",
    AUTHOR        => 'Gerhard Gappmeier',
    EMAIL         => 'gerhard.gappmeier@ascolab.com',
    EMAIL_PRIV    => 'gappy1502@gmx.net',
    YEAR          => 1900 + (localtime)[5],
);

my $SLA = << "EOF";
/*****************************************************************************
 *                                                                           *
 * Copyright (c) 2006-2020 Unified Automation GmbH. All rights reserved.     *
 *                                                                           *
 * Software License Agreement ("SLA") Version 2.7                            *
 *                                                                           *
 * Unless explicitly acquired and licensed from Licensor under another       *
 * license, the contents of this file are subject to the Software License    *
 * Agreement ("SLA") Version 2.7, or subsequent versions as allowed by the   *
 * SLA, and You may not copy or use this file in either source code or       *
 * executable form, except in compliance with the terms and conditions of    *
 * the SLA.                                                                  *
 *                                                                           *
 * All software distributed under the SLA is provided strictly on an "AS     *
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,       *
 * AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT      *
 * LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR   *
 * PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific   *
 * language governing rights and limitations under the SLA.                  *
 *                                                                           *
 * The complete license agreement can be found here:                         *
 * http://unifiedautomation.com/License/SLA/2.7/                             *
 *                                                                           *
 *****************************************************************************/
EOF

my $GPL = << "EOF";
/*****************************************************************************
 * <PROJECT>
 * Copyright (C) <YEAR>  <AUTHOR> <<EMAIL_PRIV>>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA  02110-1301, USA.EOF
 *****************************************************************************/
EOF

# set default license
$INFO{LICENSE} = filled_in($SLA);
if ($ENV{GPL}) {
    $INFO{LICENSE} = filled_in($GPL);
}
my($basename, $dir, $suffix) = fileparse($INFO{FILENAME}, qw(.pl .pm .h .c .cpp .cxx));
my $SUFFIX = q{([.][^.]+)\Z};

for ($INFO{'FILENAME'}) {
    s{^.*/lib/}{}g;
    s{^lib/}{}g;
}

for ($INFO{'MODULE NAME'}) {
    s{$SUFFIX}{};
    s{/}{::}g;
    s{^.*::lib::}{}g;
    s{^lib::}{}g;
}

for ($INFO{'RT NAME'}) {
    s{$SUFFIX}{};
    s{/}{-}g;
    s{^.*-lib-}{}g;
    s{^lib-}{}g;
    tr/A-Z/a-z/;
}

my ($type) = $INFO{FILENAME} =~ m{$SUFFIX}
    or exit;

$INFO{INCLUDEGUARD} = uc "__$INFO{FILENAME}__";
for ($INFO{'INCLUDEGUARD'}) {
    s{\.}{_}g;
}

if ($INFO{FILENAME} =~ m/main.(c|cpp|cxx)/) {
    $INFO{INCLUDE} = "";
} else {
    $INFO{INCLUDE} = "#include \"$basename.h\"";
}

my %template_for = (
    '.pl' => \&gen_pl_file,
    '.pm' => \&gen_pm_file,
    '.c' => \&gen_c_file,
    '.hpp' => \&gen_hpp_file,
    '.cpp' => \&gen_cpp_file,
    '.cxx' => \&gen_cpp_file,
    '.h' => \&gen_h_file,
);

sub filled_in {
    my ($str) = @_;
    my $placeholder = join '|', map { "\Q$_\E" } reverse sort keys %INFO;
    $str =~ s/<($placeholder)>/$INFO{$1}/g;
    return $str;
}


print filled_in $template_for{$type}();

sub gen_pl_file { <<END_TEMPLATE
#! /usr/bin/env perl

use 5.020; use warnings; use autodie;


# implementation here


__END__

=head1 NAME

<FILENAME> - [description here]

=head1 VERSION

This documentation refers to <FILENAME> version 0.0.1

=head1 USAGE

    <FILENAME> [options]

=head1 REQUIRED ARGUMENTS

=over

None

=back

=head1 OPTIONS

=over

None

=back

=head1 DIAGNOSTICS

None.

=head1 CONFIGURATION AND ENVIRONMENT

Requires no configuration files or environment variables.


=head1 DEPENDENCIES

None.


=head1 BUGS

None reported.
Bug reports and other feedback are most welcome.


=head1 AUTHOR

<AUTHOR> C<< <EMAIL> >>


=head1 COPYRIGHT

Copyright (c) <YEAR>, <AUTHOR> C<< <<EMAIL>> >>. All rights reserved.

This module is free software. It may be used, redistributed
and/or modified under the terms of the Perl Artistic License
(see http://www.perl.com/perl/misc/Artistic.html)


=head1 DISCLAIMER OF WARRANTY

BECAUSE THIS SOFTWARE IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE SOFTWARE, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE SOFTWARE "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE
ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE SOFTWARE IS WITH
YOU. SHOULD THE SOFTWARE PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL
NECESSARY SERVICING, REPAIR, OR CORRECTION.

IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE SOFTWARE AS PERMITTED BY THE ABOVE LICENCE, BE
LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL,
OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE
THE SOFTWARE (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
FAILURE OF THE SOFTWARE TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
SUCH DAMAGES.

END_TEMPLATE
}


sub gen_pm_file {
    use Perl6::Slurp;
    return scalar slurp $MODULE_TEMPLATE_FILE;
}

sub gen_h_file {
<<END_TEMPLATE
<LICENSE>
#ifndef <INCLUDEGUARD>
#define <INCLUDEGUARD>

#include <platform/platform.h>

UA_BEGIN_EXTERN_C

// implementation here

UA_END_EXTERN_C

#endif /* <INCLUDEGUARD> */
END_TEMPLATE
}

sub gen_c_file {
<<END_TEMPLATE
<LICENSE>
<INCLUDE>

// implementation here

END_TEMPLATE
}

sub gen_hpp_file {
<<END_TEMPLATE
<LICENSE>
#ifndef <INCLUDEGUARD>
#define <INCLUDEGUARD>

// implementation here

#endif /* <INCLUDEGUARD> */
END_TEMPLATE
}

sub gen_cpp_file {
<<END_TEMPLATE
<LICENSE>
<INCLUDE>

// implementation here

END_TEMPLATE
}

